{
	"name": "window",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_inputemp_sample",
						"type": "DatasetReference"
					},
					"name": "emp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sinkoutput2_csv",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "window1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmpID as short,",
				"          EmpName as string,",
				"          DeptID as short,",
				"          Salary as short,",
				"          Bonus as short,",
				"          Gender as string,",
				"          Country as string,",
				"          City as string,",
				"          DOJ as string,",
				"          Company as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> emp",
				"select1 window(over(DeptID),",
				"     desc(Salary, true),",
				"     AverageSal = avg(Salary),",
				"          Rank = rank(),",
				"          DenseRank = denseRank(),",
				"          NTILE = nTile(3),",
				"          CumeDiist = cumeDist(),",
				"          TotalSal_byDept = sum(Salary),",
				"          Row_Number = rowNumber(),",
				"          Lag = lag(Salary, 1, 'NA'),",
				"          Lead = lead(Salary, 1, 'NA')) ~> window1",
				"emp select(mapColumn(",
				"          EmpID,",
				"          EmpName,",
				"          DeptID,",
				"          Salary",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"window1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     partitionFileNames:['WindowOutput.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}