{
	"name": "FuzzyJoin",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_fuzzyemp1",
						"type": "DatasetReference"
					},
					"name": "emp1"
				},
				{
					"dataset": {
						"referenceName": "ds_fuzzyemp2",
						"type": "DatasetReference"
					},
					"name": "emp2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sinkoutput3",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "FuzzyJoin"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmpID as short,",
				"          EmpName as string,",
				"          Salary as short,",
				"          Gender as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> emp1",
				"source(output(",
				"          id as short,",
				"          name as string,",
				"          sal as short,",
				"          gender as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> emp2",
				"emp1, emp2 join(fuzzyCompare(EmpName, name, 67.00),",
				"     joinType:'inner',",
				"     matchType:'fuzzy',",
				"     ignoreSpaces: true,",
				"     scoreColumn:'Similarity_level',",
				"     broadcast: 'off')~> FuzzyJoin",
				"FuzzyJoin sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DeptID as string,",
				"          DeptName as string",
				"     ),",
				"     partitionFileNames:['FuzzyJoin_output.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}