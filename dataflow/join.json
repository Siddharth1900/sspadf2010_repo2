{
	"name": "join",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_input_excel_emp",
						"type": "DatasetReference"
					},
					"name": "emp"
				},
				{
					"dataset": {
						"referenceName": "ds_input_excel_dept",
						"type": "DatasetReference"
					},
					"name": "dept"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sinkoutput_csv",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "ls_adlsgen2_2510",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "Derivedcolumns",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "join"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmpID as short,",
				"          EmpName as string,",
				"          DeptID as short,",
				"          Salary as short,",
				"          Bonus as short,",
				"          Gender as string,",
				"          City as string,",
				"          DOJ as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     dateFormats: ['MM/dd/yyyy'],",
				"     timestampFormats: ['MM/dd/yyyy HH:mm:ss'],",
				"     preferredIntegralType: 'short',",
				"     preferredFractionalType: 'float',",
				"     booleanFormat: ['True', 'False']) ~> emp",
				"source(output(",
				"          DeptID as short,",
				"          DeptName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> dept",
				"emp derive(DOJ = toDate(DOJ),",
				"          Class = iif(Salary>2000, 'I', 'II')) ~> Derivedcolumns",
				"Derivedcolumns, dept join(emp@DeptID == dept@DeptID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join",
				"join sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     partitionFileNames:['join_output_deptempsink.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          EmpID,",
				"          EmpName,",
				"          DeptID = emp@DeptID,",
				"          DeptName,",
				"          Salary,",
				"          Class,",
				"          Bonus,",
				"          Gender,",
				"          City,",
				"          DOJ",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}